// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id          Int      @id @default(autoincrement())
  nombre      String
  email       String   @unique
  password    String
  rol         Rol      @default(RECEPCIONISTA)
  creadoEn    DateTime @default(now())
  actualizadoEn DateTime @updatedAt
}

enum Rol {
  ADMIN
  DOCTOR
  RECEPCIONISTA
}

model Paciente {
  id           Int       @id @default(autoincrement())
  nombre       String
  identificacion String   @unique
  telefono     String?
  email        String?
  direccion    String?
  fechaNacimiento DateTime?
  ultimaVisita DateTime?
  estado       EstadoPaciente @default(ACTIVO)
  citas        Cita[]
  historias    HistoriaClinica[]
  creadoEn     DateTime @default(now())
  actualizadoEn DateTime @updatedAt
}

enum EstadoPaciente {
  ACTIVO
  INACTIVO
}

model Servicio {
  id       Int      @id @default(autoincrement())
  nombre   String   @unique
  descripcion String?
  citas    Cita[]
}

model Cita {
  id          Int      @id @default(autoincrement())
  pacienteId  Int
  paciente    Paciente @relation(fields: [pacienteId], references: [id])
  servicioId  Int
  servicio    Servicio @relation(fields: [servicioId], references: [id])
  fecha       DateTime
  estado      EstadoCita @default(NUEVA)
  notas       String?
  historia    HistoriaClinica?
  creadoEn    DateTime @default(now())
  actualizadoEn DateTime @updatedAt
}

enum EstadoCita {
  NUEVA
  CONFIRMADA
  PENDIENTE
  CANCELADA
  COMPLETADA
}

model HistoriaClinica {
  id          Int      @id @default(autoincrement())
  citaId      Int      @unique
  cita        Cita     @relation(fields: [citaId], references: [id])
  pacienteId  Int
  paciente    Paciente @relation(fields: [pacienteId], references: [id])
  descripcion String
  diagnostico String?
  tratamiento String?
  observaciones String?
  creadoEn    DateTime @default(now())
  actualizadoEn DateTime @updatedAt
}